<?xml version="1.0" encoding="utf-8"?>
<Container>
<Name>Seafile Official</Name>

<Overview>Seafile is file synchronisation and sharing server.&#xD;
&#xD;
The container is build from the official Seafile Docker Image by Seafile Ltd. Only the community edition is supported at the moment.&#xD;
&#xD;
Getting Started&#xD;
Wait for a few minutes for the first time initialization, then visit e.g. http://seafile.example.com to open Seafile Web UI.&#xD;
&#xD;
This command will mount folder /opt/seafile-data at the local server to the docker instance. You can find logs and other data under this folder.&#xD;
&#xD;
&#xD;
Custom Admin Username and Password&#xD;
The default admin account is me@example.com and the password is asecret. You can use a different password by setting the container's environment variables: e.g.&#xD;
&#xD;
If you forget the admin password, you can add a new admin account and then go to the sysadmin panel to reset user password.&#xD;
&#xD;
&#xD;
Let's encrypt SSL certificate&#xD;
If you set SEAFILE_SERVER_LETSENCRYPT to true, the container would request a letsencrypt-signed SSL certificate for you automatically.&#xD;
&#xD;
If you want to use your own SSL certificate:&#xD;
Create a folder /opt/seafile-data/ssl, and put your certificate and private key under the ssl directory.&#xD;
Assume your site name is seafile.example.com, then your certificate must have the name seafile.example.com.crt, and the private key must have the name seafile.example.com.key.&#xD;
&#xD;
&#xD;
Modify Seafile Server Configurations&#xD;
The config files are under shared/seafile/conf. You can modify the configurations according to Seafile manual&#xD;
&#xD;
After modification, you need to restart the container:&#xD;
&#xD;
&#xD;
Find logs&#xD;
The seafile logs are under shared/logs/seafile in the docker, or /opt/seafile-data/logs/seafile in the server that run the docker.&#xD;
The system logs are under shared/logs/var-log, or /opt/seafile-data/logs/var-log in the server that run the docker.&#xD;
&#xD;
&#xD;
Add a new Admin&#xD;
Ensure the container is running, then enter this command:&#xD;
docker exec -it seafile /opt/seafile/seafile-server-latest/reset-admin.sh&#xD;
Enter the username and password according to the prompts. You now have a new admin account.&#xD;
&#xD;
&#xD;
Directory Structure&#xD;
/shared&#xD;
&#xD;
Placeholder spot for shared volumes. You may elect to store certain persistent information outside of a container, in our case we keep various logfiles and upload directory outside. This allows you to rebuild containers easily without losing important information.&#xD;
&#xD;
  /shared/db: This is the data directory for mysql server&#xD;
  /shared/seafile: This is the directory for seafile server configuration and data.&#xD;
  /shared/logs: This is the directory for logs.&#xD;
  /shared/logs/var-log: This is the directory that would be mounted as /var/log inside the container. &#xD;
    For example, you can find the nginx logs in shared/logs/var-log/nginx/.&#xD;
  /shared/logs/seafile: This is the directory that would contain the log files of seafile server processes.&#xD;
    For example, you can find seaf-server logs in shared/logs/seafile/seafile.log.&#xD;
  /shared/ssl: This is directory for certificate, which does not exist by default.&#xD;
&#xD;
&#xD;
Garbage Collection&#xD;
When files are deleted, the blocks comprising those files are not immediately removed as there may be other files that reference those blocks (due to the magic of deduplication). To remove them, Seafile requires a 'garbage collection' process to be run, which detects which blocks no longer used and purges them. (NOTE: for technical reasons, the GC process does not guarantee that every single orphan block will be deleted.)&#xD;
&#xD;
The required scripts can be found in the /scripts folder of the docker container. To perform garbage collection, simply run docker exec seafile /scripts/gc.sh. For the community edition, this process will stop the seafile server, but it is a relatively quick process and the seafile server will start automatically once the process has finished. The Professional supports an online garbage collection.&#xD;
&#xD;
&#xD;  
Troubleshooting&#xD;
&#xD;
You can run docker commands like "docker logs" or "docker exec" to find errors.&#xD;
docker logs -f seafile&#xD;
# or&#xD;
docker exec -it seafile bash
</Overview>

<Description>Seafile is file synchronisation and sharing server.&#xD;
&#xD;
The container is build from the official Seafile Docker Image by Seafile Ltd. Only the community edition is supported at the moment.&#xD;
&#xD;
Getting Started&#xD;
Wait for a few minutes for the first time initialization, then visit e.g. http://seafile.example.com to open Seafile Web UI.&#xD;
&#xD;
This command will mount folder /opt/seafile-data at the local server to the docker instance. You can find logs and other data under this folder.&#xD;
&#xD;
&#xD;
Custom Admin Username and Password&#xD;
The default admin account is me@example.com and the password is asecret. You can use a different password by setting the container's environment variables: e.g.&#xD;
&#xD;
If you forget the admin password, you can add a new admin account and then go to the sysadmin panel to reset user password.&#xD;
&#xD;
&#xD;
Let's encrypt SSL certificate&#xD;
If you set SEAFILE_SERVER_LETSENCRYPT to true, the container would request a letsencrypt-signed SSL certificate for you automatically.&#xD;
&#xD;
If you want to use your own SSL certificate:&#xD;
Create a folder /opt/seafile-data/ssl, and put your certificate and private key under the ssl directory.&#xD;
Assume your site name is seafile.example.com, then your certificate must have the name seafile.example.com.crt, and the private key must have the name seafile.example.com.key.&#xD;
&#xD;
&#xD;
Modify Seafile Server Configurations&#xD;
The config files are under shared/seafile/conf. You can modify the configurations according to Seafile manual&#xD;
&#xD;
After modification, you need to restart the container:&#xD;
&#xD;
&#xD;
Find logs&#xD;
The seafile logs are under shared/logs/seafile in the docker, or /opt/seafile-data/logs/seafile in the server that run the docker.&#xD;
The system logs are under shared/logs/var-log, or /opt/seafile-data/logs/var-log in the server that run the docker.&#xD;
&#xD;
&#xD;
Add a new Admin&#xD;
Ensure the container is running, then enter this command:&#xD;
docker exec -it seafile /opt/seafile/seafile-server-latest/reset-admin.sh&#xD;
Enter the username and password according to the prompts. You now have a new admin account.&#xD;
&#xD;
&#xD;
Directory Structure&#xD;
/shared&#xD;
&#xD;
Placeholder spot for shared volumes. You may elect to store certain persistent information outside of a container, in our case we keep various logfiles and upload directory outside. This allows you to rebuild containers easily without losing important information.&#xD;
&#xD;
  /shared/db: This is the data directory for mysql server&#xD;
  /shared/seafile: This is the directory for seafile server configuration and data.&#xD;
  /shared/logs: This is the directory for logs.&#xD;
  /shared/logs/var-log: This is the directory that would be mounted as /var/log inside the container. &#xD;
    For example, you can find the nginx logs in shared/logs/var-log/nginx/.&#xD;
  /shared/logs/seafile: This is the directory that would contain the log files of seafile server processes.&#xD;
    For example, you can find seaf-server logs in shared/logs/seafile/seafile.log.&#xD;
  /shared/ssl: This is directory for certificate, which does not exist by default.&#xD;
&#xD;
&#xD;
Garbage Collection&#xD;
When files are deleted, the blocks comprising those files are not immediately removed as there may be other files that reference those blocks (due to the magic of deduplication). To remove them, Seafile requires a 'garbage collection' process to be run, which detects which blocks no longer used and purges them. (NOTE: for technical reasons, the GC process does not guarantee that every single orphan block will be deleted.)&#xD;
&#xD;
The required scripts can be found in the /scripts folder of the docker container. To perform garbage collection, simply run docker exec seafile /scripts/gc.sh. For the community edition, this process will stop the seafile server, but it is a relatively quick process and the seafile server will start automatically once the process has finished. The Professional supports an online garbage collection.&#xD;
&#xD;
&#xD;  
Troubleshooting&#xD;
&#xD;
You can run docker commands like "docker logs" or "docker exec" to find errors.&#xD;
docker logs -f seafile&#xD;
# or&#xD;
docker exec -it seafile bash
</Description>

  <Category>Cloud: Network:Other Productivity:</Category>
  <WebUI>http://[IP]:[PORT:81]</WebUI>

  <Icon>https://raw.githubusercontent.com/cmer/docker-templates/master/cmer/images/seafile-icon.png</Icon>
  <Support>https://github.com/haiwen/seafile-docker</Support>
  <Project>https://manual.seafile.com/deploy/deploy_with_docker.html</Project>
  <Category>Cloud: Network:Other Productivity:</Category>
  <Icon>https://github.com/pit-c/unRaid-docker-templates/blob/master/icons/seafile-icon.png</Icon>

  <Registry>https://hub.docker.com/r/seafileltd/seafile/</Registry>
  <Repository>seafileltd/seafile:latest</Repository>
  <TemplateURL>https://raw.githubusercontent.com/pit-c/unRaid-docker-templates/master/hcp/Seafile%20Official.xml</TemplateURL>
  <BindTime>true</BindTime>

  <Privileged>false</Privileged>

  <Networking>
    <Mode>bridge</Mode>
    <Publish>
    </Publish>
  </Networking>
  <Data>
  </Data>
 
  <Version>1.0</Version>
  <Date>2018-08-04</Date>
  <ExtraParams></ExtraParams>
 
  <Config Name="Web Interface Port" Target="80" Default="80" Mode="tcp" Description="SeaHub Web UI. Default: 80" Type="Port" Display="always" Required="true" Mask="false">81</Config>
  <Config Name="Web Interface Port SSL" Target="443" Default="443" Mode="tcp" Description="Seafile File Server. Default: 443" Type="Port" Display="always" Required="true" Mask="false">444</Config>
 
  <Config Name="SEAFILE_SERVER_HOSTNAME" Target="SEAFILE_SERVER_HOSTNAME" Default="seafile.example.com" Mode="" Description="ex: seafile.example.com" Type="Variable" Display="always" Required="true" Mask="false">seafile.example.com</Config>
  <Config Name="SEAFILE_ADMIN_EMAIL" Target="SEAFILE_ADMIN_EMAIL" Default="me@example.com" Mode="" Description="ex: me@example.com" Type="Variable" Display="always" Required="true" Mask="false">me@example.com</Config>
  <Config Name="SEAFILE_ADMIN_PASSWORD" Target="SEAFILE_ADMIN_PASSWORD" Default="a_very_secret_password" Mode="" Description="ex: a_very_secret_password" Type="Variable" Display="always" Required="true" Mask="false">a_very_secret_password</Config>
  <Config Name="SEAFILE_SERVER_LETSENCRYPT" Target="SEAFILE_SERVER_LETSENCRYPT" Default="false" Mode="" Description="Default: false, true/false" Type="Variable" Display="always" Required="true" Mask="false">false</Config>
 
  <Config Name="AppData Config Path:" Target="/shared" Default="/mnt/user/seafile" Mode="rw" Description="Container path: /shared" Type="Path" Display="advanced-hide" Required="true" Mask="false">/mnt/user/appdata/seafile</Config>
  <Config Name="PUID" Target="PUID" Default="99" Mode="" Description="UID for permissions.  Do not change unless you know what you're doing." Type="Variable" Display="advanced-hide" Required="false" Mask="false">99</Config>
  <Config Name="PGID" Target="PGID" Default="100" Mode="" Description="GID for permissions.  Do not change unless you know what you're doing." Type="Variable" Display="advanced-hide" Required="false" Mask="false">100</Config>
  <Config Name="Web Interface Port Seafile" Target="8000" Default="8000" Mode="tcp" Description="SeaHub Web UI. Default: 8000" Type="Port" Display="advanced-hide" Required="true" Mask="false">8000</Config>
  <Config Name="File Server Port Seafile" Target="8082" Default="8082" Mode="tcp" Description="Seafile File Server. Default: 8082" Type="Port" Display="advanced-hide" Required="true" Mask="false">8082</Config>   
</Container>
